---
Parameters:

  GitHubUser:
    Type: String

  RepositoryName:
    Type: String
    Default: hugo-blog

  CodeBuildName:
    Type: String
    Default: hugo-blog

  CodePipelineName:
    Type: String
    Default: hugo-blog

  OriginName:
    Type: String
    Default: com-felipe1982
    AllowedPattern: '^[a-z0-9.-]+[a-z0-9]+$'
    ConstraintDescription: Must provide OriginName for website (eg. myhugoblog.example.com)

  S3CodePipelineBucketName:
    Type: String
    Default: codepipeline

  GitHubBranch:
    Type: String
    Default: master


Resources:

  S3CodePipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${S3CodePipelineBucketName}-${AWS::Region}-${AWS::AccountId}"

  CloudFrontOAI:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig: #required
        Comment: 'origin'

  S3WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      # AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html

  S3WebsiteBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3WebsiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: "s3:GetObject"
            Resource: !Sub "${S3WebsiteBucket.Arn}/*"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref S3CodePipelineBucket
        Type: S3
      Name: !Ref CodePipelineName
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: hugo-source-files
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref RepositoryName
                Branch: !Ref GitHubBranch
                OAuthToken: !Sub '{{resolve:secretsmanager:${AWS::StackName}/github-token::::}}'
        -
          Name: Build
          Actions:
            -
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              InputArtifacts:
                - Name: hugo-source-files
              Configuration:
                ProjectName: !Ref CodeBuildJob

  CodeBuildJob:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref CodeBuildName
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.6.5
        EnvironmentVariables:
          - Name: S3_WEBSITE_BUCKET
            Value: !Ref S3WebsiteBucket
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        BuildSpec: buildspec.yml
        Type: CODEPIPELINE
      TimeoutInMinutes: 6

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: codepipeline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
                -
                    Action:
                        - 's3:GetObject'
                        - 's3:GetObjectVersion'
                        - 's3:GetBucketVersioning'
                    Resource: '*'
                    Effect: Allow
                -
                    Action:
                        - 's3:PutObject'
                    Resource:
                        - 'arn:aws:s3:::codepipeline*'
                        - 'arn:aws:s3:::elasticbeanstalk*'
                    Effect: Allow
                -
                    Action:
                        - 'codecommit:CancelUploadArchive'
                        - 'codecommit:GetBranch'
                        - 'codecommit:GetCommit'
                        - 'codecommit:GetUploadArchiveStatus'
                        - 'codecommit:UploadArchive'
                    Resource: '*'
                    Effect: Allow
                -
                    Action:
                        - 'autoscaling:*'
                        - 'cloudwatch:*'
                        - 's3:*'
                        - 'sns:*'
                        - 'iam:PassRole'
                    Resource: '*'
                    Effect: Allow
                -
                    Action:
                        - 'codebuild:BatchGetBuilds'
                        - 'codebuild:StartBuild'
                    Resource: '*'
                    Effect: Allow

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: codebuild
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - codecommit:GitPull
              Resource:
              - arn:aws:s3:::codepipeline-us-east-1-*
              - !Sub "arn:aws:codecommit:us-east-1:638088845137:${CodeBuildName}"
            - Effect: Allow
              Action:
              - s3:DeleteObject
              - s3:GetAccelerateConfiguration
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:GetBucketLogging
              - s3:GetBucketNotification
              - s3:GetBucketPolicy
              - s3:GetBucketTagging
              - s3:GetBucketVersioning
              - s3:GetBucketWebsite
              - s3:GetIpConfiguration
              - s3:GetLifecycleConfiguration
              - s3:GetMetricsConfiguration
              - s3:GetObject
              - s3:GetObjectAcl
              - s3:GetObjectTagging
              - s3:GetObjectVersion
              - s3:GetObjectVersionAcl
              - s3:GetObjectVersionForReplication
              - s3:GetObjectVersionTagging
              - s3:ListBucket
              - s3:ListBucketByTags
              - s3:ListBucketMultipartUploads
              - s3:ListBucketVersions
              - s3:ListMultipartUploadParts
              - s3:PutBucketPolicy
              - s3:PutBucketWebsite
              - s3:PutObject
              - s3:PutObjectAcl
              Resource:
              - !Sub "${S3WebsiteBucket.Arn}"
              - !Sub "${S3WebsiteBucket.Arn}/*"
            - Effect: Allow
              Action:
              - s3:ListAllMyBuckets
              - s3:HeadBucket
              - s3:ListObjects
              Resource: "*"
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:638088845137:log-group:/aws/codebuild/${CodeBuildName}"
              - !Sub "arn:aws:logs:${AWS::Region}:638088845137:log-group:/aws/codebuild/${CodeBuildName}:*"

#  CfDistribution:
#    Type: "AWS::CloudFront::Distribution"
#    Properties:
#      DistributionConfig:
#        Enabled: true
#        Origins:
#          - DomainName: !GetAtt S3WebsiteBucket.DomainName
#            Id: !Ref OriginName
#            OriginCustomHeaders:
#              - HeaderName: X-com-felipe1982-origin-header
#                HeaderValue: 'BUr8cf*dEYQCfGcretGf'
#            CustomOriginConfig:
#              OriginProtocolPolicy: match-viewer
#        DefaultRootObject: index.html
#        DefaultCacheBehavior:
#          TargetOriginId: !Ref OriginName
#          # ViewerProtocolPolicy: redirect-to-https
#          ForwardedValues:
#            QueryString: false

Outputs:
  Bucket:
    Value: !Ref S3WebsiteBucket
  BucketWebsiteURL:
    Value: !GetAtt S3WebsiteBucket.WebsiteURL
  BucketDomainName:
    Value: !GetAtt S3WebsiteBucket.DomainName
  BucketRegionalDomainName:
    Value: !GetAtt S3WebsiteBucket.RegionalDomainName
  BucketDualStack:
    Value: !GetAtt S3WebsiteBucket.DualStackDomainName
#  DistributionUrl:
#    Value: !Sub http://${CfDistribution.DomainName}
#  DistributionUrlSecure:
#    Value: !Sub https://${CfDistribution.DomainName}
